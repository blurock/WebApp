<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
              http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5" xmlns="http://java.sun.com/xml/ns/javaee">

	<!-- Servlets -->
	<servlet>
		<servlet-name>log4j-init</servlet-name>
		<servlet-class>info.esblurock.reaction.Log4jInit</servlet-class>

		<init-param>
			<param-name>log4j-init-file</param-name>
			<param-value>/WEB-INF/logging.properties</param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>
	<context-param>
		<!-- max size of the upload request -->
		<param-name>maxSize</param-name>
		<param-value>3145728</param-value>
	</context-param>
	<context-param>
		<!-- max size of any uploaded file -->
		<param-name>maxFileSize</param-name>
		<param-value>3145728</param-value>
	</context-param>
	<context-param>
		<!-- Useful in development mode to slow down the uploads in fast networks. 
			Put the number of milliseconds to sleep in each block received in the server. 
			false or 0, means don't use slow uploads -->
		<param-name>slowUploads</param-name>
		<param-value>200</param-value>
	</context-param>

	<servlet>
		<servlet-name>reactionQueryService</servlet-name>
		<servlet-class>info.esblurock.reaction.server.ReactionSearchServiceImpl</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>uploadServlet</servlet-name>
		<!-- This is the default servlet, it puts files in session -->
		<servlet-class>info.esblurock.reaction.server.ReactionUploadServiceImpl</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>messageServlet</servlet-name>
		<servlet-class>info.esblurock.reaction.server.MessageServerImpl</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>loginservice</servlet-name>
		<servlet-class>info.esblurock.reaction.server.LoginServiceImpl</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>transactionservice</servlet-name>
		<servlet-class>info.esblurock.reaction.server.TransactionServiceImpl</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>organizationdescriptionservice</servlet-name>
		<servlet-class>info.esblurock.reaction.server.OrganizationDescriptionServiceImpl</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>storedescriptiondata</servlet-name>
		<servlet-class>info.esblurock.reaction.server.StoreDescriptionDataImpl</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>textToDatabaseService</servlet-name>
		<servlet-class>info.esblurock.reaction.server.TextToDatabaseImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>uploadServlet</servlet-name>
		<url-pattern>*.gupld</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>reactionQueryService</servlet-name>
		<url-pattern>/webapp/reactionqueryservice</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>loginservice</servlet-name>
		<url-pattern>/webapp/loginservice</url-pattern>
		<url-pattern>/loginservice</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>organizationdescriptionservice</servlet-name>
		<url-pattern>/webapp/organizationdescriptionservice</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>transactionservice</servlet-name>
		<url-pattern>/webapp/transactionservice</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>storedescriptiondata</servlet-name>
		<url-pattern>/webapp/storedescriptiondata</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>textToDatabaseService</servlet-name>
		<url-pattern>/webapp/texttodatabase</url-pattern>
	</servlet-mapping>

<!--
 	<security-constraint>
		<web-resource-collection>
			<web-resource-name>all</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>*</role-name>
		</auth-constraint>
	</security-constraint>
 -->
</web-app>

